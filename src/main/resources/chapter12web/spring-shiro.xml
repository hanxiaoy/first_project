<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 缓存管理器 使用redis实现 -->
    <bean id="cacheManager" class="org.shiro.chapter12web.redisCacheutil.RedisCacheManager">
        <property name="redisManager" ref="redisManager" />
    </bean>
       
	<!-- shiro redisManager -->
	<bean id="redisManager" class="org.shiro.chapter12web.redisCacheutil.RedisManager">
	
<!-- 	    <property name="host" value=""/> -->
	    <property name="port" value="6379"/>
	    <property name="expire" value="1800"/>
<!-- 	    optional properties: -->
	    <property name="timeout" value="1000"/>
<!-- 	    <property name="password" value=""/> -->
	</bean>
	
	
	<!-- 凭证匹配器-->
<!-- 	<bean id="credentialsMatcher" class="org.shiro.chapter12web.credentials.RetryLimitHashedCredentialsMatcher"> -->
<!-- 		<constructor-arg ref="cacheManager"/> -->
<!-- 		<property name="hashAlgorithmName" value="md5"/> -->
<!-- 		<property name="hashIterations" value="2"/> -->
<!-- 		<property name="storedCredentialsHexEncoded" value="true"/> -->
<!-- 	</bean> -->
	
	<!-- Realm实现-->
	<bean id="userRealm" class="org.shiro.chapter12web.realm.UserRealm">
		<property name="userService" ref="userService"/>
<!-- 		<property name="credentialsMatcher" ref="credentialsMatcher"/> -->
		<property name="cachingEnabled" value="true"/>
		<property name="authenticationCachingEnabled" value="true"/>
		<property name="authenticationCacheName" value="authenticationCache"/>
		<property name="authorizationCachingEnabled" value="true"/>
		<property name="authorizationCacheName" value="authorizationCache"/>
	</bean>
	
	<!-- 会话ID 生成器-->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
		
		<!-- 会话DAO -->
		<bean id="sessionDAO"
			class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
			<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
			<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
		</bean>

		<!-- 会话验证调度器-->
		<bean id="sessionValidationScheduler"
			class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
			<property name="sessionValidationInterval" value="18000000000"/>
			<property name="sessionManager" ref="sessionManager"/>
		</bean>

		<!-- 会话管理器-->
		<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
			<property name="globalSessionTimeout" value="1800000000"/>
			<property name="deleteInvalidSessions" value="true"/>
			<property name="sessionValidationSchedulerEnabled" value="true"/>
			<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
			<property name="sessionDAO" ref="sessionDAO"/>
			<property name="sessionIdCookieEnabled" value="true"/>
			<property name="sessionIdCookie" ref="sessionIdCookie"/>
		</bean>

		<!-- 安全管理 -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" >
			<property name="realm" ref="userRealm"></property>
			<property name="sessionManager" ref="sessionManager"></property>
			<property name="cacheManager" ref="cacheManager"></property>
		</bean>
		
		<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
		<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
			<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
			<property name="arguments" ref="securityManager"/>
		</bean>

		<!-- Shiro 生命周期处理器-->
		<bean id="lifecycleBeanPostProcessor"
			class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
		
		<!-- 会话Cookie 模板-->
		<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
			<constructor-arg value="sid"/>
			<property name="httpOnly" value="true"/>
			<property name="maxAge" value="180000"/>
		</bean>
		
		<!-- 基于Form表单的身份验证过滤器 -->
		<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
			<property name="usernameParam" value="username"></property>
			<property name="passwordParam" value="password"></property>
			<property name="loginUrl" value="/page/login.jsp"></property>
			<property name="failureKeyAttribute" value="error"></property>
		</bean>

		<!-- shiro的web过滤器 -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager"></property>
			<property name="loginUrl" value="/page/login.jsp"></property>
			<property name="unauthorizedUrl" value="/page/unauthorized.jsp"></property>
			<property name="filters">
				<util:map>
					<entry key="authc" value-ref="formAuthenticationFilter"></entry>
				</util:map>
			</property>
			<property name="filterChainDefinitions" >
				<value>
					/page/index.jsp=anon
					/page/unauthorized.jsp=anon
					/page/login.jsp=authc
					/page/index.jsp=user
					/**=user
				</value>
			</property>
		</bean>
</beans>